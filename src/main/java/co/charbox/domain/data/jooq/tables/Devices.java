/**
 * This class is generated by jOOQ
 */
package co.charbox.domain.data.jooq.tables;


import co.charbox.domain.data.jooq.Charbot_0_1_0;
import co.charbox.domain.data.jooq.Keys;
import co.charbox.domain.data.jooq.tables.records.DevicesRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Devices extends TableImpl<DevicesRecord> {

	private static final long serialVersionUID = -1612648261;

	/**
	 * The reference instance of <code>charbot_0_1_0.devices</code>
	 */
	public static final Devices DEVICES = new Devices();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<DevicesRecord> getRecordType() {
		return DevicesRecord.class;
	}

	/**
	 * The column <code>charbot_0_1_0.devices.id</code>.
	 */
	public final TableField<DevicesRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>charbot_0_1_0.devices.name</code>.
	 */
	public final TableField<DevicesRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false).defaulted(true), this, "");

	/**
	 * Create a <code>charbot_0_1_0.devices</code> table reference
	 */
	public Devices() {
		this("devices", null);
	}

	/**
	 * Create an aliased <code>charbot_0_1_0.devices</code> table reference
	 */
	public Devices(String alias) {
		this(alias, DEVICES);
	}

	private Devices(String alias, Table<DevicesRecord> aliased) {
		this(alias, aliased, null);
	}

	private Devices(String alias, Table<DevicesRecord> aliased, Field<?>[] parameters) {
		super(alias, Charbot_0_1_0.CHARBOT_0_1_0, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<DevicesRecord, Integer> getIdentity() {
		return Keys.IDENTITY_DEVICES;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<DevicesRecord> getPrimaryKey() {
		return Keys.KEY_DEVICES_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<DevicesRecord>> getKeys() {
		return Arrays.<UniqueKey<DevicesRecord>>asList(Keys.KEY_DEVICES_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Devices as(String alias) {
		return new Devices(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Devices rename(String name) {
		return new Devices(name, null);
	}
}
