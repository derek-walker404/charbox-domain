/**
 * This class is generated by jOOQ
 */
package co.charbox.domain.data.jooq.tables;


import co.charbox.domain.data.jooq.Charbot_0_1_0;
import co.charbox.domain.data.jooq.Keys;
import co.charbox.domain.data.jooq.tables.records.TokenAuthRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TokenAuth extends TableImpl<TokenAuthRecord> {

	private static final long serialVersionUID = 864280212;

	/**
	 * The reference instance of <code>charbot_0_1_0.token_auth</code>
	 */
	public static final TokenAuth TOKEN_AUTH = new TokenAuth();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<TokenAuthRecord> getRecordType() {
		return TokenAuthRecord.class;
	}

	/**
	 * The column <code>charbot_0_1_0.token_auth.id</code>.
	 */
	public final TableField<TokenAuthRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>charbot_0_1_0.token_auth.expiration</code>.
	 */
	public final TableField<TokenAuthRecord, Timestamp> EXPIRATION = createField("expiration", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

	/**
	 * The column <code>charbot_0_1_0.token_auth.token</code>.
	 */
	public final TableField<TokenAuthRecord, String> TOKEN = createField("token", org.jooq.impl.SQLDataType.VARCHAR.length(45), this, "");

	/**
	 * The column <code>charbot_0_1_0.token_auth.asset_id</code>.
	 */
	public final TableField<TokenAuthRecord, Integer> ASSET_ID = createField("asset_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>charbot_0_1_0.token_auth.service_name</code>.
	 */
	public final TableField<TokenAuthRecord, String> SERVICE_NAME = createField("service_name", org.jooq.impl.SQLDataType.VARCHAR.length(45), this, "");

	/**
	 * Create a <code>charbot_0_1_0.token_auth</code> table reference
	 */
	public TokenAuth() {
		this("token_auth", null);
	}

	/**
	 * Create an aliased <code>charbot_0_1_0.token_auth</code> table reference
	 */
	public TokenAuth(String alias) {
		this(alias, TOKEN_AUTH);
	}

	private TokenAuth(String alias, Table<TokenAuthRecord> aliased) {
		this(alias, aliased, null);
	}

	private TokenAuth(String alias, Table<TokenAuthRecord> aliased, Field<?>[] parameters) {
		super(alias, Charbot_0_1_0.CHARBOT_0_1_0, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<TokenAuthRecord, Integer> getIdentity() {
		return Keys.IDENTITY_TOKEN_AUTH;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<TokenAuthRecord> getPrimaryKey() {
		return Keys.KEY_TOKEN_AUTH_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<TokenAuthRecord>> getKeys() {
		return Arrays.<UniqueKey<TokenAuthRecord>>asList(Keys.KEY_TOKEN_AUTH_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TokenAuth as(String alias) {
		return new TokenAuth(alias, this);
	}

	/**
	 * Rename this table
	 */
	public TokenAuth rename(String name) {
		return new TokenAuth(name, null);
	}
}
