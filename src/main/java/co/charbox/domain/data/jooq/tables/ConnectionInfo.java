/**
 * This class is generated by jOOQ
 */
package co.charbox.domain.data.jooq.tables;


import co.charbox.domain.data.jooq.Charbot_0_1_0;
import co.charbox.domain.data.jooq.Keys;
import co.charbox.domain.data.jooq.tables.records.ConnectionInfoRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ConnectionInfo extends TableImpl<ConnectionInfoRecord> {

	private static final long serialVersionUID = 1912269702;

	/**
	 * The reference instance of <code>charbot_0_1_0.connection_info</code>
	 */
	public static final ConnectionInfo CONNECTION_INFO = new ConnectionInfo();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<ConnectionInfoRecord> getRecordType() {
		return ConnectionInfoRecord.class;
	}

	/**
	 * The column <code>charbot_0_1_0.connection_info.id</code>.
	 */
	public final TableField<ConnectionInfoRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>charbot_0_1_0.connection_info.connection_id</code>.
	 */
	public final TableField<ConnectionInfoRecord, Integer> CONNECTION_ID = createField("connection_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>charbot_0_1_0.connection_info.location_id</code>.
	 */
	public final TableField<ConnectionInfoRecord, Integer> LOCATION_ID = createField("location_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * Create a <code>charbot_0_1_0.connection_info</code> table reference
	 */
	public ConnectionInfo() {
		this("connection_info", null);
	}

	/**
	 * Create an aliased <code>charbot_0_1_0.connection_info</code> table reference
	 */
	public ConnectionInfo(String alias) {
		this(alias, CONNECTION_INFO);
	}

	private ConnectionInfo(String alias, Table<ConnectionInfoRecord> aliased) {
		this(alias, aliased, null);
	}

	private ConnectionInfo(String alias, Table<ConnectionInfoRecord> aliased, Field<?>[] parameters) {
		super(alias, Charbot_0_1_0.CHARBOT_0_1_0, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<ConnectionInfoRecord, Integer> getIdentity() {
		return Keys.IDENTITY_CONNECTION_INFO;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<ConnectionInfoRecord> getPrimaryKey() {
		return Keys.KEY_CONNECTION_INFO_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<ConnectionInfoRecord>> getKeys() {
		return Arrays.<UniqueKey<ConnectionInfoRecord>>asList(Keys.KEY_CONNECTION_INFO_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ConnectionInfo as(String alias) {
		return new ConnectionInfo(alias, this);
	}

	/**
	 * Rename this table
	 */
	public ConnectionInfo rename(String name) {
		return new ConnectionInfo(name, null);
	}
}
