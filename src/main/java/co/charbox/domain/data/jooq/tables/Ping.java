/**
 * This class is generated by jOOQ
 */
package co.charbox.domain.data.jooq.tables;


import co.charbox.domain.data.jooq.Charbot_0_1_0;
import co.charbox.domain.data.jooq.Keys;
import co.charbox.domain.data.jooq.tables.records.PingRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Ping extends TableImpl<PingRecord> {

	private static final long serialVersionUID = 1870427331;

	/**
	 * The reference instance of <code>charbot_0_1_0.ping</code>
	 */
	public static final Ping PING = new Ping();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<PingRecord> getRecordType() {
		return PingRecord.class;
	}

	/**
	 * The column <code>charbot_0_1_0.ping.id</code>.
	 */
	public final TableField<PingRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>charbot_0_1_0.ping.device_id</code>.
	 */
	public final TableField<PingRecord, Integer> DEVICE_ID = createField("device_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>charbot_0_1_0.ping.connection_id</code>.
	 */
	public final TableField<PingRecord, Integer> CONNECTION_ID = createField("connection_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>charbot_0_1_0.ping.server_location_id</code>.
	 */
	public final TableField<PingRecord, Integer> SERVER_LOCATION_ID = createField("server_location_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>charbot_0_1_0.ping.start_time</code>.
	 */
	public final TableField<PingRecord, Timestamp> START_TIME = createField("start_time", org.jooq.impl.SQLDataType.TIMESTAMP.defaulted(true), this, "");

	/**
	 * The column <code>charbot_0_1_0.ping.url</code>.
	 */
	public final TableField<PingRecord, String> URL = createField("url", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

	/**
	 * The column <code>charbot_0_1_0.ping.packet_loss</code>.
	 */
	public final TableField<PingRecord, Double> PACKET_LOSS = createField("packet_loss", org.jooq.impl.SQLDataType.FLOAT, this, "");

	/**
	 * The column <code>charbot_0_1_0.ping.min_latency</code>.
	 */
	public final TableField<PingRecord, Double> MIN_LATENCY = createField("min_latency", org.jooq.impl.SQLDataType.FLOAT, this, "");

	/**
	 * The column <code>charbot_0_1_0.ping.avg_latency</code>.
	 */
	public final TableField<PingRecord, Double> AVG_LATENCY = createField("avg_latency", org.jooq.impl.SQLDataType.FLOAT, this, "");

	/**
	 * The column <code>charbot_0_1_0.ping.max_latency</code>.
	 */
	public final TableField<PingRecord, Double> MAX_LATENCY = createField("max_latency", org.jooq.impl.SQLDataType.FLOAT, this, "");

	/**
	 * Create a <code>charbot_0_1_0.ping</code> table reference
	 */
	public Ping() {
		this("ping", null);
	}

	/**
	 * Create an aliased <code>charbot_0_1_0.ping</code> table reference
	 */
	public Ping(String alias) {
		this(alias, PING);
	}

	private Ping(String alias, Table<PingRecord> aliased) {
		this(alias, aliased, null);
	}

	private Ping(String alias, Table<PingRecord> aliased, Field<?>[] parameters) {
		super(alias, Charbot_0_1_0.CHARBOT_0_1_0, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<PingRecord, Integer> getIdentity() {
		return Keys.IDENTITY_PING;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<PingRecord> getPrimaryKey() {
		return Keys.KEY_PING_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<PingRecord>> getKeys() {
		return Arrays.<UniqueKey<PingRecord>>asList(Keys.KEY_PING_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Ping as(String alias) {
		return new Ping(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Ping rename(String name) {
		return new Ping(name, null);
	}
}
