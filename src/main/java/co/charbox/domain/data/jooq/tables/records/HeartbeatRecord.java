/**
 * This class is generated by jOOQ
 */
package co.charbox.domain.data.jooq.tables.records;


import co.charbox.domain.data.jooq.tables.Heartbeat;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class HeartbeatRecord extends UpdatableRecordImpl<HeartbeatRecord> implements Record3<Integer, Integer, Timestamp> {

	private static final long serialVersionUID = 455588459;

	/**
	 * Setter for <code>charbot_0_1_0.heartbeat.id</code>.
	 */
	public void setId(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>charbot_0_1_0.heartbeat.id</code>.
	 */
	public Integer getId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>charbot_0_1_0.heartbeat.device_id</code>.
	 */
	public void setDeviceId(Integer value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>charbot_0_1_0.heartbeat.device_id</code>.
	 */
	public Integer getDeviceId() {
		return (Integer) getValue(1);
	}

	/**
	 * Setter for <code>charbot_0_1_0.heartbeat.time</code>.
	 */
	public void setTime(Timestamp value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>charbot_0_1_0.heartbeat.time</code>.
	 */
	public Timestamp getTime() {
		return (Timestamp) getValue(2);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record3 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<Integer, Integer, Timestamp> fieldsRow() {
		return (Row3) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<Integer, Integer, Timestamp> valuesRow() {
		return (Row3) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return Heartbeat.HEARTBEAT.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field2() {
		return Heartbeat.HEARTBEAT.DEVICE_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field3() {
		return Heartbeat.HEARTBEAT.TIME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value2() {
		return getDeviceId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value3() {
		return getTime();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public HeartbeatRecord value1(Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public HeartbeatRecord value2(Integer value) {
		setDeviceId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public HeartbeatRecord value3(Timestamp value) {
		setTime(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public HeartbeatRecord values(Integer value1, Integer value2, Timestamp value3) {
		value1(value1);
		value2(value2);
		value3(value3);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached HeartbeatRecord
	 */
	public HeartbeatRecord() {
		super(Heartbeat.HEARTBEAT);
	}

	/**
	 * Create a detached, initialised HeartbeatRecord
	 */
	public HeartbeatRecord(Integer id, Integer deviceId, Timestamp time) {
		super(Heartbeat.HEARTBEAT);

		setValue(0, id);
		setValue(1, deviceId);
		setValue(2, time);
	}
}
